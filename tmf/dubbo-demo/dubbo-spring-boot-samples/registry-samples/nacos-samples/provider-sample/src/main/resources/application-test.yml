demo:
  service:
    version: 1.0.0
nacos:
  config:
    server-addr: ${NACOS_ADDR:192.168.2.146:31788}?username=nacos&password=nacos
    namespace: ${NACOS_NAMESPACE:885077bed0f3}
dubbo:
  registry:
    address: nacos://${NACOS_ADDR}?username=${NACOS_USERNAME}&password=${NACOS_PASSWORD}
    parameters:
      namespace: ${NACOS_NAMESPACE:a550735a03c3}
      group: ${NACOS_GROUP:DEFAULT_GROUP}
      username: ${NACOS_USERNAME}
      password: ${NACOS_PASSWORD}
  scan:
    base-packages: org.apache.dubbo.spring.boot.sample.provider.service
  protocol:
    port: 20880
    name: dubbo
  provider:
    parameters:
      paas-name: ${SERVICE_NAME:provider-sample}
      paas-ns: ${PAAS_NS:apm}
      service-type: Dubbo
      configs: ${NACOS_NAMESPACE}@${CONFIG_GROUP:DEFAULT_GROUP}@${SERVICE_NAME}-${PROFILE}
  application:
    name: ${SERVICE_NAME:provider-sample}
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${MYSQL_HOST:192.168.2.134}:${MYSQL_PORT:3306}/${MYSQL_DB:spring_cloud}?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8&serviceName=spring-clodu-mysql&namespace=${nacos.discovery.namespace}&version=5.6
    password: ${MYSQL_PASSWORD:123456}
    username: ${MYSQL_USERNAME:root}
  redis:
    host: ${REDIS_HOST:192.168.2.134}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD}
    jedis:
      pool:
        max-active: 8
  rabbitmq:
    host: ${RABBITMQ_HOST:192.168.2.134}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VIRTUAL_HOST:}
  kafka:
    bootstrap-servers: ${KAFKA_SERVER:192.168.2.172:9092} #指定kafka server的地址，集群配多个，中间，逗号隔开
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: default_consumer_group #群组ID
      enable-auto-commit: true
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      missing-topics-fatal: false
rocketmq:
  name-server: ${ROCKET_ADDR:192.168.4.173:9876}
  producer:
    group: producer_group_test
    send-message-timeout: 6000
    enable-msg-trace: ${ENABLE_MSG_TRACE:false}