server:
  port: 8401
spring:
  application:
    name: ${SERVICE_NAME:demo}
  profiles:
    active: ${PROFILE:dev}
  kafka:
    bootstrap-servers: ${KAFKA_SERVER:192.168.90.183:9092} #指定kafka server的地址，集群配多个，中间，逗号隔开
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: default_consumer_group #群组ID
      enable-auto-commit: true
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      missing-topics-fatal: false
  cloud:
    discovery:
      master-backup:
        enabled: ${MASTER_BACKUP_ENABLED}
        serviceMetadataUpdatePeriod: ${MASTER_BACKUP_UPDATE_PERIOD:10}
  jpa:
    database: MYSQL
    generate-ddl: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: false
  datasource:
    url: jdbc:mysql://192.168.90.214:3306/huhu?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 111111
    driver-class-name: com.mysql.cj.jdbc.Driver
  redis:
    host: 192.168.90.201
    port: 6380
    password:
    jedis:
      pool:
        max-active: 8
  rabbitmq:
    host: 192.168.90.183
    port: 5672
    username: admin
    password: admin
    virtual-host: /
management:
  endpoints:
    web:
      exposure:
        include: "*"
      cors:
        allowed-origins: "*"
        allowed-methods: "*"
      base-path: /
project:
  version: v1
logging:
  level:
    root: info
tenx:
  spring:
    boot:
      archaius:
        enabled: false


rocketmq:
  name-server: ${ROCKET_ADDR:192.168.90.183:9876}
  producer:
    group: producer_group_test
    send-message-timeout: 6000
    enable-msg-trace: ${ENABLE_MSG_TRACE:false}

